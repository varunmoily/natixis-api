package com.imarticus.demo;

import static org.junit.jupiter.api.Assertions.assertEquals;

import java.util.List;

import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.web.server.LocalServerPort;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.web.client.RestTemplate;

import com.imarticus.demo.Model.Book;
import com.imarticus.demo.Repo.BookRepo;


@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT )
class SampleDemo {

	static RestTemplate restTemplate;
	
	@LocalServerPort
	int port;
	
	String baseURL= "http://localhost";
	
	@Autowired
	BookRepo bookRepo;
	
	@BeforeAll
	static public void setUp() {
		restTemplate = new RestTemplate();
	}
	
	@BeforeEach
	public void initSetUp() {
		baseURL = baseURL.concat(":").concat(""+port).concat("/book");
	}
	
	@Test
	@Sql(statements="delete from book",executionPhase = Sql.ExecutionPhase.AFTER_TEST_METHOD)
	public void check() {
		Book b = new Book("c++","ramya",800);
		Book newBook = restTemplate.postForObject(baseURL+"/add", b,Book.class);
		assertEquals("abhi", newBook.getAuthor());
	}
	
	@Test
	@Sql(statements="delete from book",executionPhase = Sql.ExecutionPhase.BEFORE_TEST_METHOD)
	@Sql(statements="insert into book (id,name,author,price) values(123,'alphabets','vamsi',5000)",executionPhase = Sql.ExecutionPhase.BEFORE_TEST_METHOD)
	@Sql(statements="delete from book",executionPhase = Sql.ExecutionPhase.AFTER_TEST_METHOD)
	public void checkGet() {
		List<Book> l = restTemplate.getForObject(baseURL+"/all", List.class);
		assertEquals(1, l.size());
	}
	
	@Test
	@Sql(statements="delete from book",executionPhase = Sql.ExecutionPhase.BEFORE_TEST_METHOD)
	@Sql(statements="insert into book (id,name,author,price) values(123,'alphabets','vamsi',5000)",executionPhase = Sql.ExecutionPhase.BEFORE_TEST_METHOD)
	@Sql(statements="delete from book",executionPhase = Sql.ExecutionPhase.AFTER_TEST_METHOD)
	public void checkUpdate() {
		Book b = new Book("c++","abhi",1234);
		restTemplate.put(baseURL+"/update/123", b);
		assertEquals("abhi",bookRepo.findById(123).get().getAuthor());
	}
	
	@Test
	@Sql(statements="delete from book",executionPhase = Sql.ExecutionPhase.BEFORE_TEST_METHOD)
	@Sql(statements="insert into book (id,name,author,price) values(123,'alphabets','vamsi',5000)",executionPhase = Sql.ExecutionPhase.BEFORE_TEST_METHOD)
	@Sql(statements="delete from book",executionPhase = Sql.ExecutionPhase.AFTER_TEST_METHOD)
	public void checkDelete() {
		
		restTemplate.delete(baseURL+"/remove/123");
		assertEquals(0, bookRepo.count());
	}

}
